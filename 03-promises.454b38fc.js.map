{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,mBACzC,IAAIE,EAAS,GAwBb,SAASC,GAAgBC,SAAAC,EAAUC,MAAAC,IACjC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,IACO,IAAIC,SAAQ,CAACC,EAASC,KAChCN,EACFK,EAAQ,CAAET,SAAAC,EAAUC,MAAAC,IAEpBO,EAAO,CAAEV,SAAAC,EAAUC,MAAAC,GAAQ,IAK5BQ,MAAK,EAACX,SAAEA,EAAQE,MAAEA,MACjBU,EAAApB,GAASqB,OAAOC,QAAQ,qBAAqBd,QAAeE,MAAU,IAEvEa,OAAM,EAACf,SAAEA,EAAQE,MAAEA,MAClBU,EAAApB,GAASqB,OAAOG,QAAQ,oBAAoBhB,QAAeE,MAAU,KAExEC,E,CAzCLT,EAAKuB,iBAAiB,SAGtB,SAAiBC,GACf,IAAIC,EAAYD,EAAIE,OAAOC,KACvBC,EAAQJ,EAAIE,OAAOE,MACvBxB,EAAOqB,GAAaI,OAAOD,E,IAL7BzB,EAAUoB,iBAAiB,SAO3B,SAAoBC,GACpBA,EAAIM,iBAIJ,UAA4BtB,MAACA,EAAKuB,KAAEA,EAAIC,OAAEA,IAC1C,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAE,CAChC,IAAIC,EAAgB,GAClBA,EAAc5B,SAAW2B,EAAI,EAC7BC,EAAc1B,MAAQA,EAAQuB,EAAOE,EACrC5B,EAAc6B,E,EARlBC,CAAmB/B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('[type=\"submit\"]');\nlet params = {};\n\nform.addEventListener('input', onInput);\nsubmitBtn.addEventListener('click', onClickBtn);\n\nfunction onInput(evt) {\n  let parameter = evt.target.name;\n  let value = evt.target.value;\n  params[parameter] = Number(value);\n}\nfunction onClickBtn(evt){\nevt.preventDefault();\ncreatePromiseCycle(params);\n}\n\nfunction createPromiseCycle({delay, step, amount}){\nfor(let i = 0; i < amount; i += 1){\n  let promiseParams = {};\n    promiseParams.position = i + 1;\n    promiseParams.delay = delay + step * i;\n    createPromise(promiseParams);\n}\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n\n    return promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }, delay);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$params","$47d4ff9957288465$var$createPromise","position","position1","delay","delay1","shouldResolve","Math","random","setTimeout","Promise","resolve","reject","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","evt","parameter","target","name","value","Number","preventDefault","step","amount","i","promiseParams","$47d4ff9957288465$var$createPromiseCycle"],"version":3,"file":"03-promises.454b38fc.js.map"}