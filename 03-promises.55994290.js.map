{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,mBACrCE,EAAS,GAwBb,SAASC,EAAcC,G,IAAEC,EAAFD,EAAEE,SAAUC,EAAZH,EAAYI,MAC3BC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAST,OARgB,IAAIC,SAAQ,SAACC,EAASC,GAChCN,EACFK,EAAQ,CAAER,SAAAD,EAAUG,MAAAD,IAEpBQ,EAAO,CAAET,SAAAD,EAAUG,MAAAD,G,IAKpBS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUE,EAAKS,EAALT,MACjBU,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAff,EAAS,QAAYe,OAANb,EAAM,M,IAEnEc,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUE,EAAKS,EAALT,MAClBU,EAAAtB,GAASuB,OAAOI,QAAQ,oBAAmCF,OAAff,EAAS,QAAYe,OAANb,EAAM,M,MAEpED,E,CAzCLT,EAAK0B,iBAAiB,SAGtB,SAAiBC,GACf,IAAIC,EAAYD,EAAIE,OAAOC,KACvBC,EAAQJ,EAAIE,OAAOE,MACvB3B,EAAOwB,GAAaI,OAAOD,E,IAL7B5B,EAAUuB,iBAAiB,SAO3B,SAAoBC,GACpBA,EAAIM,iBAIJ,SAA4Bd,GAC5B,I,IAD6BT,EAADS,EAACT,MAAOwB,EAARf,EAAQe,KAAMC,EAAdhB,EAAcgB,OAClCC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAE,CAChC,IAAIC,EAAgB,GAClBA,EAAc7B,SAAW4B,EAAI,EAC7BC,EAAc3B,MAAQA,EAAQwB,EAAOE,EACrC/B,EAAcgC,E,EARlBC,CAAmBlC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('[type=\"submit\"]');\nlet params = {};\n\nform.addEventListener('input', onInput);\nsubmitBtn.addEventListener('click', onClickBtn);\n\nfunction onInput(evt) {\n  let parameter = evt.target.name;\n  let value = evt.target.value;\n  params[parameter] = Number(value);\n}\nfunction onClickBtn(evt){\nevt.preventDefault();\ncreatePromiseCycle(params);\n}\n\nfunction createPromiseCycle({delay, step, amount}){\nfor(let i = 0; i < amount; i += 1){\n  let promiseParams = {};\n    promiseParams.position = i + 1;\n    promiseParams.delay = delay + step * i;\n    createPromise(promiseParams);\n}\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n\n    return promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }, delay);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$params","$ce04d3a99e08e73b$var$createPromise","param1","position1","position","delay1","delay","shouldResolve","Math","random","setTimeout","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","parameter","target","name","value","Number","preventDefault","step","amount","i","promiseParams","$ce04d3a99e08e73b$var$createPromiseCycle"],"version":3,"file":"03-promises.55994290.js.map"}